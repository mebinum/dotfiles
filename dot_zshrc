#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
for config_file ($HOME/.yadr/zsh/*.zsh) source $config_file

#Add NVM to SHELL
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm
export PATH="/usr/local/bin:$PATH"

#add go-lang to path
export PATH="$PATH:/usr/local/opt/go/libexec/bin"
#create GOPATH for go-lang library packages
export GOPATH="$HOME/Projects/go-projects"
#add go-lang binaries to path
export PATH="$PATH:$GOPATH/bin"

autoload -U add-zsh-hook
load-nvmrc() {
  if [[ -f .nvmrc && -r .nvmrc ]]; then
    nvm use
  elif [[ $(nvm version) != $(nvm version default)  ]]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

#add x11 font config
export FONTCONFIG_PATH="/opt/X11/lib/X11/fontconfig"

# add user base to python path
#export PYTHONPATH=$(python -c "import site, os; print(os.path.join(site.USER_BASE, 'lib', 'python', 'site-packages'))"):$PYTHONPATH

#Add Android to Path
export ANDROID_HOME="/Users/oyemike/Library/Android/sdk"

#configure AWS profile switch
alias awsp="source _awsp"

# added by travis gem
[ -f /Users/oyemike/.travis/travis.sh ] && source /Users/oyemike/.travis/travis.sh

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
#[[ -f /Users/oyemike/Projects/jean/lambdas/node_modules/tabtab/.completions/serverless.zsh ]] && . /Users/oyemike/Projects/jean/lambdas/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
#[[ -f /Users/oyemike/Projects/jean/lambdas/node_modules/tabtab/.completions/sls.zsh ]] && . /Users/oyemike/Projects/jean/lambdas/node_modules/tabtab/.completions/sls.zshexport PATH="/usr/local/opt/sqlite/bin:$PATH"

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

#ADD Flutter to $PATH

export PATH="$HOME/.flutterio/bin:$PATH"

#Enable desktop flutter app
export ENABLE_FLUTTER_DESKTOP=true

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/oyemike/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/oyemike/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/oyemike/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/oyemike/google-cloud-sdk/completion.zsh.inc'; fi

#add gcp credentials to bash

#export GOOGLE_CLOUD_KEYFILE_JSON="$HOME/.keys/gcp/gcp-key-ansible-sa.json"
export GOOGLE_CLOUD_KEYFILE_JSON="$HOME/.keys/gcp/seeddigital-1008.json"
export GCP_SERVICE_ACCOUNT_FILE=$GOOGLE_CLOUD_KEYFILE_JSON

#setup pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
export PIPENV_PYTHON="$PYENV_ROOT/shims/python"

# Load automatically
plugin=(
  pyenv
)

eval "$(pyenv init --path)"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# if command -v pyenv 1>/dev/null 2>&1; then
#   eval "$(pyenv init -)"
# fi
export LDFLAGS="-L$(brew --prefix openssl)/lib"
export C_INCLUDE_PATH=$C_INCLUDE_PATH:$(brew --prefix openssl)/include
export CPPFLAGS="-I$(brew --prefix openssl)/include"
export PATH="$(brew --prefix openssl)/bin:$PATH"

export PKG_CONFIG_PATH="$(brew --prefix)/opt/mysql-client/lib/pkgconfig"

# # >>> conda initialize >>>
# # !! Contents within this block are managed by 'conda init' !!
# __conda_setup="$('/Users/oyemike/opt/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
# if [ $? -eq 0 ]; then
#     eval "$__conda_setup"
# else
#     if [ -f "/Users/oyemike/opt/anaconda3/etc/profile.d/conda.sh" ]; then
#         . "/Users/oyemike/opt/anaconda3/etc/profile.d/conda.sh"
#     else
#         export PATH="/Users/oyemike/opt/anaconda3/bin:$PATH"
#     fi
# fi
# unset __conda_setup
# # <<< conda initialize <<<

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"

# configure asdf
. "$(brew --prefix asdf)/libexec/asdf.sh"

. "/usr/local/opt/asdf/etc/bash_completion.d/asdf.bash"

. "/usr/local/opt/asdf/etc/bash_completion.d/asdf.bash"

# enable history on iex
$env:ERL_AFLAGS = "-kernel shell_history enabled"

if [ -d "/Volumes/Element_Mac_Ex" ]; then
  # Check if ollama_models folder exists
  if [ ! -d "/Volumes/Element_Mac_Ex/ollama_models" ]; then
    # Create ollama_models folder
    mkdir -p "/Volumes/Element_Mac_Ex/ollama_models"
  fi
  # Set OLLAMA_MODELS environment variable
  export OLLAMA_MODELS="/Volumes/Element_Mac_Ex/ollama_models"
fi

# Added by Windsurf
export PATH="/Users/oyemike/.codeium/windsurf/bin:$PATH"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

. "$HOME/.local/bin/env"
export PATH="/usr/local/opt/postgresql@15/bin:$PATH"
export PATH="/usr/local/opt/curl/bin:$PATH"
